"use strict";function _instanceof(t,e){return null!=e&&"undefined"!=typeof Symbol&&e[Symbol.hasInstance]?e[Symbol.hasInstance](t):t instanceof e}function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function _arrayWithoutHoles(t){if(Array.isArray(t)){for(var e=0,r=new Array(t.length);e<t.length;e++)r[e]=t[e];return r}}function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var Scrambler=function(t){try{var e=function(t){var e=t||1,r=Math.random().toString(36).replace(/[^a-z]+/g,"").substr(0,e);if(" \t\n\r\v".indexOf(r)<0)return r},r=!!(o=t)&&o.constructor===Object||"object"==_typeof(t);r&&(t.target=void 0!==t.target&&r?t.target:"[data-scrambler]",t.random=void 0!==t.random&&r?t.random:[1e3,3e3],t.speed=void 0!==t.speed&&r?t.speed:100,t.text=!(void 0===t.text||!r)&&t.text);var n=function(){return r?t.random[0]+(Math.random()*(1-t.random[1])+t.random[1]):-2999*Math.random()+3e3+1e3};!function(t){_toConsumableArray(r?document.querySelectorAll(t.target):document.querySelectorAll(t)).forEach(function(r,o){if("true"!==r.getAttribute("data-scramble-active")){r.setAttribute("data-scramble-active","true");var a=r.textContent.split(""),i=r.innerHTML,c=a,u=r.textContent.split(""),l=[],f=t.speed?t.speed:100,s=!1,b=function(t){var n=t||r.textContent;a=n.split(""),u=n.split(""),c=[],a.forEach(function(t,r){" \t\n\r\v".indexOf(a[r])>-1?c.push(" "):c.push(e())}),c=c};t.text&&""!==t.text&&("string"==typeof t.text||_instanceof(t.text,String))?(b(t.text),s=!0):r.getAttribute("data-scramble-text")&&""!==r.getAttribute("data-scramble-text")&&(b(r.getAttribute("data-scramble-text")),s=!0);var d=setInterval(function(){if(c.map(function(t,o){" \t\n\r\v".indexOf(t)>-1||(u[o]=e(),setTimeout(function(){l[o]=!0},n()),!0===l[o]&&(u[o]=a[o]),r.textContent=u.join(""))}),u.length==a.length&&u.every(function(t,e){return t===a[e]})){if(r.innerHTML=i,s){var t=r.children[0];t&&""!==t&&(t.textContent=u.join(""))}clearInterval(d),r.setAttribute("data-scramble-active","false")}},f)}})}(t)}catch(t){console.trace("%cuh-oh: %c"+t,"color:indianred;","color:cornflowerblue;")}var o};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
