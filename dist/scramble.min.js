console.log("out");var Scrambler=function(){console.log("in");return function(t){try{const n=function(){return Math.random().toString(36).replace(/[^a-z]+/g,"").substr(0,1)};let r=!!(e=t)&&e.constructor===Object||"object"==typeof t;r&&(t.target=void 0!==t.target&&r?t.target:"[data-scrambler]",t.random=void 0!==t.random&&r?t.random:[1e3,3e3],t.speed=void 0!==t.speed&&r?t.speed:100);const o=function(){return r?t.random[0]+(Math.random()*(1-t.random[1])+t.random[1]):-2999*Math.random()+3e3+1e3};!function(t){(r?[...document.querySelectorAll(t.target)]:[...document.querySelectorAll(t)]).forEach(function(e,r){if("true"!==e.getAttribute("data-scramble-active")){e.setAttribute("data-scramble-active","true");let r=e.textContent.split(""),a=e.textContent.split(""),c=[],l=t.speed?t.speed:100;const i=setInterval(function(){r.map((t,l)=>{" \t\n\r\v".indexOf(t)>-1||(a[l]=n(),setTimeout(function(){c[l]=!0},o()),!0===c[l]&&(a[l]=r[l]),e.textContent=a.join(""))});let t=a.length==r.length&&a.every(function(t,e){return t===r[e]});t&&(clearInterval(i),e.setAttribute("data-scramble-active","false"))},l)}})}(t)}catch(t){console.trace("%cuh-oh: %c"+t,"color:indianred;","color:cornflowerblue;")}var e}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmFtYmxlLmpzIl0sIm5hbWVzIjpbImNvbnNvbGUiLCJsb2ciLCJTY3JhbWJsZXIiLCJzY3JhbWJsZUFyZ3MiLCJyYW5kb21DaGFyIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwicmVwbGFjZSIsInN1YnN0ciIsInBhc3NlZEFzT2JqZWN0IiwiYSIsImNvbnN0cnVjdG9yIiwiT2JqZWN0IiwidGFyZ2V0Iiwic3BlZWQiLCJyYW5kb21UaW1lIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsImVsZW1lbnQiLCJ3aGljaCIsImdldEF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsInRydXRoIiwidGV4dENvbnRlbnQiLCJzcGxpdCIsIm5ld0xldHRlcnMiLCJyZXZlcnQiLCJ0aWNrZXIiLCJzZXRJbnRlcnZhbCIsIm1hcCIsImxldHRlciIsImkiLCJpbmRleE9mIiwic2V0VGltZW91dCIsImpvaW4iLCJraWxsQ2hlY2siLCJsZW5ndGgiLCJldmVyeSIsImUiLCJjbGVhckludGVydmFsIiwic2NyYW1ibGVGaXJlIiwidHJhY2UiXSwibWFwcGluZ3MiOiJBQUNDQSxRQUFRQyxJQUFJLE9BQ2IsSUFBSUMsVUFBWSxXQUNmRixRQUFRQyxJQUFJLE1Bb0ZaLE9BbEZpQixTQUFTRSxHQUN6QixJQUdDLE1BQU1DLEVBQWEsV0FDbEIsT0FBT0MsS0FBS0MsU0FBU0MsU0FBUyxJQUFJQyxRQUFRLFdBQVksSUFBSUMsT0FBTyxFQUFHLElBT3JFLElBQUlDLEtBSnNCQyxFQUlLUixJQUhiUSxFQUFFQyxjQUFnQkMsUUFHbUMsaUJBQWhCVixFQUVsRE8sSUFDSlAsRUFBYVcsWUFBMEMsSUFBeEJYLEVBQWFXLFFBQTBCLEVBQXVCWCxFQUFhVyxPQUFTLG1CQUNuSFgsRUFBYUcsWUFBMEMsSUFBeEJILEVBQWFHLFFBQTBCLEVBQXVCSCxFQUFhRyxRQUFVLElBQU0sS0FDMUhILEVBQWFZLFdBQXdDLElBQXZCWixFQUFhWSxPQUF5QixFQUF1QlosRUFBYVksTUFBUSxLQUdqSCxNQUFNQyxFQUFhLFdBQ2xCLE9BQUtOLEVBQ0dQLEVBQWFHLE9BQU8sSUFBTUQsS0FBS0MsVUFBWSxFQUFJSCxFQUFhRyxPQUFPLElBQU1ILEVBQWFHLE9BQU8sS0FFdEUsS0FBaEJELEtBQUtDLFNBQXdCLElBQXJDLE1BS1IsU0FBd0JILElBRVAsTUFBeUJjLFNBQVNDLGlCQUFpQmYsRUFBYVcsYUFBZUcsU0FBU0MsaUJBQWlCZixLQUcvR2dCLFFBQVEsU0FBVUMsRUFBU0MsR0FFbkMsR0FBc0QsU0FBakRELEVBQVFFLGFBQWEsd0JBQXFDLENBQzlERixFQUFRRyxhQUFhLHVCQUF1QixRQUU1QyxJQUFJQyxFQUFRSixFQUFRSyxZQUFZQyxNQUFNLElBQ2xDQyxFQUFhUCxFQUFRSyxZQUFZQyxNQUFNLElBQ3ZDRSxLQUNBYixFQUFTWixFQUFrQixNQUFJQSxFQUFhWSxNQUFRLElBRXhELE1BQU1jLEVBQVNDLFlBQWEsV0FFM0JOLEVBQU1PLElBQUssQ0FBQ0MsRUFBUUMsS0FFZixZQUFZQyxRQUFRRixJQUFXLElBRW5DTCxFQUFXTSxHQUFLN0IsSUFFaEIrQixXQUFZLFdBQ1hQLEVBQU9LLElBQUssR0FDVmpCLE1BRWdCLElBQWRZLEVBQU9LLEtBQ1ZOLEVBQVdNLEdBQUtULEVBQU1TLElBR3hCYixFQUFRSyxZQUFjRSxFQUFXUyxLQUFLLE9BSXRDLElBQUlDLEVBQWFWLEVBQVdXLFFBQVVkLEVBQU1jLFFBQVdYLEVBQVdZLE1BQU0sU0FBU0MsRUFBR1AsR0FDbkYsT0FBT08sSUFBTWhCLEVBQU1TLEtBRWZJLElBQ0pJLGNBQWNaLEdBQ2RULEVBQVFHLGFBQWEsdUJBQXVCLFdBRTVDUixNQTVDUDJCLENBQWF2QyxHQWtEWixNQUFNcUMsR0FDUHhDLFFBQVEyQyxNQUFNLGNBQWdCSCxFQUFPLG1CQUFtQix5QkF0RXZDLElBQVM3QixHQVhiIiwiZmlsZSI6InNjcmFtYmxlLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cdGNvbnNvbGUubG9nKCdvdXQnKTtcclxudmFyIFNjcmFtYmxlciA9IChmdW5jdGlvbiAoKSB7XHRcclxuXHRjb25zb2xlLmxvZygnaW4nKTtcclxuXHQvLyBtYWluIGZuIC0gZXhwb3NlZCB0byB3aW5kb3dcclxuXHRjb25zdCBzY3JhbWJsZSA9IGZ1bmN0aW9uKHNjcmFtYmxlQXJncykge1xyXG5cdFx0dHJ5IHtcclxuXHRcdFx0LyoqKiBoZWxwZXIgZnVuY3Rpb25zICoqKi9cclxuXHRcdFx0Ly8gdXRpbGl0eSBmbiB0byBnZXQgYSByYW5kb20gY2hhcmFjdGVyIFxyXG5cdFx0XHRjb25zdCByYW5kb21DaGFyID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0cmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnJlcGxhY2UoL1teYS16XSsvZywgJycpLnN1YnN0cigwLCAxKTtcclxuXHRcdFx0fVxyXG5cdFx0XHQvLyBvYmplY3QgdGVzdFxyXG5cdFx0XHRjb25zdCBpc09iamVjdCA9IGZ1bmN0aW9uKGEpIHtcclxuXHRcdFx0XHRyZXR1cm4gKCEhYSkgJiYgKGEuY29uc3RydWN0b3IgPT09IE9iamVjdCk7XHJcblx0XHRcdH07XHJcblx0XHRcdC8vIGRpZCB0aGUgdXNlciBwYXNzIGFuIG9iamVjdCBhcyBhbiBhcmd1bWVudD9cclxuXHRcdFx0bGV0IHBhc3NlZEFzT2JqZWN0ID0gKGlzT2JqZWN0KHNjcmFtYmxlQXJncykgfHwgdHlwZW9mIHNjcmFtYmxlQXJncyA9PSAnb2JqZWN0Jyk7XHJcblx0XHRcdC8vIHNldCBmdW5jdGlvbiBkZWZhdWx0IGFyZ3VtZW50cyBpZiBpdCB3YXMgYW4gb2JqZWN0XHJcblx0XHRcdGlmICggcGFzc2VkQXNPYmplY3QgKSB7IFxyXG5cdFx0XHRcdHNjcmFtYmxlQXJncy50YXJnZXQgPSAoIHR5cGVvZiBzY3JhbWJsZUFyZ3MudGFyZ2V0ICE9PSAndW5kZWZpbmVkJyAmJiAoIHBhc3NlZEFzT2JqZWN0ICkgKSA/IHNjcmFtYmxlQXJncy50YXJnZXQgOiAnW2RhdGEtc2NyYW1ibGVyXSc7XHJcblx0XHRcdFx0c2NyYW1ibGVBcmdzLnJhbmRvbSA9ICggdHlwZW9mIHNjcmFtYmxlQXJncy5yYW5kb20gIT09ICd1bmRlZmluZWQnICYmICggcGFzc2VkQXNPYmplY3QgKSApID8gc2NyYW1ibGVBcmdzLnJhbmRvbSA6IFsxMDAwLCAzMDAwXTtcclxuXHRcdFx0XHRzY3JhbWJsZUFyZ3Muc3BlZWQgPSAoIHR5cGVvZiBzY3JhbWJsZUFyZ3Muc3BlZWQgIT09ICd1bmRlZmluZWQnICYmICggcGFzc2VkQXNPYmplY3QgKSApID8gc2NyYW1ibGVBcmdzLnNwZWVkIDogMTAwO1xyXG5cdFx0XHR9XHJcblx0XHRcdC8vIHV0aWxpdHkgZm4gdG8gZ2V0IGEgcmFuZG9tIGRlbGF5IHRpbWUgXHJcblx0XHRcdGNvbnN0IHJhbmRvbVRpbWUgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRpZiAoIHBhc3NlZEFzT2JqZWN0ICkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIHNjcmFtYmxlQXJncy5yYW5kb21bMF0gKyAoTWF0aC5yYW5kb20oKSAqICgxIC0gc2NyYW1ibGVBcmdzLnJhbmRvbVsxXSkgKyBzY3JhbWJsZUFyZ3MucmFuZG9tWzFdKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cmV0dXJuIDEwMDAgKyAoTWF0aC5yYW5kb20oKSAqICgxIC0gMzAwMCkgKyAzMDAwKTtcclxuXHRcdFx0fVx0XHJcblxyXG5cdFx0XHRzY3JhbWJsZUZpcmUoc2NyYW1ibGVBcmdzKTsgLy8gY2FsbCBhY3Rpb24gZm5cclxuXHJcblx0XHRcdGZ1bmN0aW9uIHNjcmFtYmxlRmlyZSAoIHNjcmFtYmxlQXJncyApIHsgLy8gcmVtZW1iZXIsIGhvaXN0ZWRcclxuXHRcdFx0XHRcdC8vIGdldCBjaG9zZW4gc2NyYW1ibGUgaXRlbXNcclxuXHRcdFx0XHRcdHZhciBzY3JhbWJsZSA9ICggcGFzc2VkQXNPYmplY3QgKSA/IFsuLi5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNjcmFtYmxlQXJncy50YXJnZXQpXSA6IFsuLi5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNjcmFtYmxlQXJncyldIDtcclxuXHJcblx0XHRcdFx0XHQvLyBmb3IgZWFjaCBzY3JhbWJsZSBlbGVtZW50XHJcblx0XHRcdFx0XHRzY3JhbWJsZS5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50LCB3aGljaCkge1xyXG5cclxuXHRcdFx0XHRcdFx0aWYgKCBlbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1zY3JhbWJsZS1hY3RpdmUnKSAhPT0gJ3RydWUnICkge1xyXG5cdFx0XHRcdFx0XHRcdGVsZW1lbnQuc2V0QXR0cmlidXRlKCdkYXRhLXNjcmFtYmxlLWFjdGl2ZScsJ3RydWUnKTtcclxuXHJcblx0XHRcdFx0XHRcdFx0bGV0IHRydXRoID0gZWxlbWVudC50ZXh0Q29udGVudC5zcGxpdCgnJyk7IC8vIGdldCBsZXR0ZXJzXHJcblx0XHRcdFx0XHRcdFx0bGV0IG5ld0xldHRlcnMgPSBlbGVtZW50LnRleHRDb250ZW50LnNwbGl0KCcnKTtcclxuXHRcdFx0XHRcdFx0XHRsZXQgcmV2ZXJ0ID0gW107IC8vIGluaXQgZW1wdHkga2lsbCBzd2l0Y2ggYXJyYXlcdFxyXG5cdFx0XHRcdFx0XHRcdGxldCBzcGVlZCA9IChzY3JhbWJsZUFyZ3Muc3BlZWQpID8gc2NyYW1ibGVBcmdzLnNwZWVkIDogMTAwIDtcclxuXHJcblx0XHRcdFx0XHRcdFx0Y29uc3QgdGlja2VyID0gc2V0SW50ZXJ2YWwoIGZ1bmN0aW9uKCkgeyBcclxuXHRcdFx0XHRcdFx0XHRcdC8vIG1hcCBvdmVyIGxldHRlcnMgYW5kIHJlcGxhY2Ugd2l0aCByYW5kb20gb3IgcmV2ZXJ0IGJhY2sgdG8gdHJ1dGhcclxuXHRcdFx0XHRcdFx0XHRcdHRydXRoLm1hcCggKGxldHRlciwgaSkgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBicmVhayBpZiBhIHNwYWNlXHJcblx0XHRcdFx0XHRcdFx0XHRcdGlmICgnIFxcdFxcblxcclxcdicuaW5kZXhPZihsZXR0ZXIpID4gLTEpIHJldHVybjsgXHJcblx0XHRcdFx0XHRcdFx0XHRcdC8vIHNldCBuZXcgcmFuZG9tIGxldHRlclxyXG5cdFx0XHRcdFx0XHRcdFx0XHRuZXdMZXR0ZXJzW2ldID0gcmFuZG9tQ2hhcigpO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBzZXQgcmFuZG9tIHRpbWVvdXQgdG8gbWFrZSBsZXR0ZXJzIHJlc2V0IGF0IGRpZmZlcmVudCB0aW1lc1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRzZXRUaW1lb3V0KCBmdW5jdGlvbigpIHsgXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0cmV2ZXJ0W2ldID0gdHJ1ZTsgXHJcblx0XHRcdFx0XHRcdFx0XHRcdH0sIHJhbmRvbVRpbWUoKSApO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyByZXNldCBpbmRpdmlkdWFsIGxldHRlciBpZiBraWxsIHN3aXRjaFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHJldmVydFtpXSA9PT0gdHJ1ZSApIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG5ld0xldHRlcnNbaV0gPSB0cnV0aFtpXTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0fTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gc2V0IGh0bWxcclxuXHRcdFx0XHRcdFx0XHRcdFx0ZWxlbWVudC50ZXh0Q29udGVudCA9IG5ld0xldHRlcnMuam9pbignJyk7XHJcblx0XHRcdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0XHRcdFx0Ly8ga2lsbCBpbnRlcnZhbCBhZnRlciBhbGwgbGV0dGVyIHJldHVybmVkIHRvIG5vcm1hbCB0byBzYXZlIHN0YWNrXHJcblx0XHRcdFx0XHRcdFx0XHRcdGxldCBraWxsQ2hlY2sgPSAobmV3TGV0dGVycy5sZW5ndGggPT0gdHJ1dGgubGVuZ3RoKSAmJiBuZXdMZXR0ZXJzLmV2ZXJ5KGZ1bmN0aW9uKGUsIGkpIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gZSA9PT0gdHJ1dGhbaV07IFxyXG5cdFx0XHRcdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBraWxsQ2hlY2sgKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0Y2xlYXJJbnRlcnZhbCh0aWNrZXIpOyAvLyBzdG9wIGxvb3BpbmdcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRlbGVtZW50LnNldEF0dHJpYnV0ZSgnZGF0YS1zY3JhbWJsZS1hY3RpdmUnLCdmYWxzZScpO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR9O1xyXG5cdFx0XHRcdFx0XHRcdH0sIHNwZWVkKTsgLy8gZW5kIHRpY2tlclxyXG5cclxuXHRcdFx0XHRcdFx0fSAvLyBlbmQgY2hlY2sgZm9yIGFjdGl2ZVxyXG5cclxuXHRcdFx0XHRcdH0pOyAvLyBlbmQgZm9yRWFjaFxyXG5cdFx0XHR9OyAvLyBlbmQgc2NyYW1ibGVGaXJlXHJcblx0XHR9IGNhdGNoKGUpIHtcclxuXHRcdFx0Y29uc29sZS50cmFjZSgnJWN1aC1vaDogJWMnICsgZSArICcnLCdjb2xvcjppbmRpYW5yZWQ7JywnY29sb3I6Y29ybmZsb3dlcmJsdWU7Jyk7XHJcblx0XHR9IFxyXG5cdH07IC8vIGVuZCBTY3JhbWJsZVxyXG5cclxuXHRyZXR1cm4gc2NyYW1ibGU7XHJcblx0XHJcbn0pKCk7XHJcbiJdfQ==
