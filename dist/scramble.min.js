export const Scrambler=function(t){try{const e=function(){return Math.random().toString(36).replace(/[^a-z]+/g,"").substr(0,1)};let n=function(t){return!!t&&t.constructor===Object}(t)||"object"==typeof t;n&&(t.target=void 0!==t.target&&n?t.target:"[data-scrambler]",t.random=void 0!==t.random&&n?t.random:[1e3,3e3],t.speed=void 0!==t.speed&&n?t.speed:100);const r=function(){return n?t.random[0]+(Math.random()*(1-t.random[1])+t.random[1]):-2999*Math.random()+3e3+1e3};!function(t){(n?[...document.querySelectorAll(t.target)]:[...document.querySelectorAll(t)]).forEach(function(n,o){if("true"!==n.getAttribute("data-scramble-active")){n.setAttribute("data-scramble-active","true");let o=n.textContent.split(""),a=n.innerHTML,c=n.textContent.split(""),i=[],l=t.speed?t.speed:100;const u=setInterval(function(){o.map((t,a)=>{" \t\n\r\v".indexOf(t)>-1||(c[a]=e(),setTimeout(function(){i[a]=!0},r()),!0===i[a]&&(c[a]=o[a]),n.textContent=c.join(""))});let t=c.length==o.length&&c.every(function(t,e){return t===o[e]});t&&(n.innerHTML=a,clearInterval(u),n.setAttribute("data-scramble-active","false"))},l)}})}(t)}catch(t){console.trace("%cuh-oh: %c"+t,"color:indianred;","color:cornflowerblue;")}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmFtYmxlLmpzIl0sIm5hbWVzIjpbIlNjcmFtYmxlciIsInNjcmFtYmxlQXJncyIsInJhbmRvbUNoYXIiLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJyZXBsYWNlIiwic3Vic3RyIiwicGFzc2VkQXNPYmplY3QiLCJhIiwiY29uc3RydWN0b3IiLCJPYmplY3QiLCJpc09iamVjdCIsInRhcmdldCIsInNwZWVkIiwicmFuZG9tVGltZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJlbGVtZW50Iiwid2hpY2giLCJnZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJ0cnV0aCIsInRleHRDb250ZW50Iiwic3BsaXQiLCJ0cnV0aEhUTUwiLCJpbm5lckhUTUwiLCJuZXdMZXR0ZXJzIiwicmV2ZXJ0IiwidGlja2VyIiwic2V0SW50ZXJ2YWwiLCJtYXAiLCJsZXR0ZXIiLCJpIiwiaW5kZXhPZiIsInNldFRpbWVvdXQiLCJqb2luIiwia2lsbENoZWNrIiwibGVuZ3RoIiwiZXZlcnkiLCJlIiwiY2xlYXJJbnRlcnZhbCIsInNjcmFtYmxlRmlyZSIsImNvbnNvbGUiLCJ0cmFjZSJdLCJtYXBwaW5ncyI6Ik9BQU8sTUFBTUEsVUFBWSxTQUFVQyxHQUNsQyxJQUdDLE1BQU1DLEVBQWEsV0FDbEIsT0FBT0MsS0FBS0MsU0FBU0MsU0FBUyxJQUFJQyxRQUFRLFdBQVksSUFBSUMsT0FBTyxFQUFHLElBT3JFLElBQUlDLEVBSmEsU0FBVUMsR0FDMUIsUUFBVUEsR0FBT0EsRUFBRUMsY0FBZ0JDLE9BR2RDLENBQVNYLElBQXdDLGlCQUFoQkEsRUFFbkRPLElBQ0hQLEVBQWFZLFlBQXlDLElBQXhCWixFQUFhWSxRQUEwQixFQUFvQlosRUFBYVksT0FBUyxtQkFDL0daLEVBQWFHLFlBQXlDLElBQXhCSCxFQUFhRyxRQUEwQixFQUFvQkgsRUFBYUcsUUFBVSxJQUFNLEtBQ3RISCxFQUFhYSxXQUF1QyxJQUF2QmIsRUFBYWEsT0FBeUIsRUFBb0JiLEVBQWFhLE1BQVEsS0FHN0csTUFBTUMsRUFBYSxXQUNsQixPQUFJUCxFQUNJUCxFQUFhRyxPQUFPLElBQU1ELEtBQUtDLFVBQVksRUFBSUgsRUFBYUcsT0FBTyxJQUFNSCxFQUFhRyxPQUFPLEtBRXRFLEtBQWhCRCxLQUFLQyxTQUF3QixJQUFyQyxNQUtSLFNBQXNCSCxJQUVKLE1BQXVCZSxTQUFTQyxpQkFBaUJoQixFQUFhWSxhQUFlRyxTQUFTQyxpQkFBaUJoQixLQUcvR2lCLFFBQVEsU0FBVUMsRUFBU0MsR0FFbkMsR0FBcUQsU0FBakRELEVBQVFFLGFBQWEsd0JBQW9DLENBQzVERixFQUFRRyxhQUFhLHVCQUF3QixRQUU3QyxJQUFJQyxFQUFRSixFQUFRSyxZQUFZQyxNQUFNLElBQ2xDQyxFQUFZUCxFQUFRUSxVQUNwQkMsRUFBYVQsRUFBUUssWUFBWUMsTUFBTSxJQUN2Q0ksS0FDQWYsRUFBU2IsRUFBa0IsTUFBSUEsRUFBYWEsTUFBUSxJQUV4RCxNQUFNZ0IsRUFBU0MsWUFBWSxXQUUxQlIsRUFBTVMsSUFBSSxDQUFDQyxFQUFRQyxLQUVkLFlBQVlDLFFBQVFGLElBQVcsSUFFbkNMLEVBQVdNLEdBQUtoQyxJQUVoQmtDLFdBQVcsV0FDVlAsRUFBT0ssSUFBSyxHQUNWbkIsTUFFZSxJQUFkYyxFQUFPSyxLQUNWTixFQUFXTSxHQUFLWCxFQUFNVyxJQUd2QmYsRUFBUUssWUFBY0ksRUFBV1MsS0FBSyxPQUl2QyxJQUFJQyxFQUFhVixFQUFXVyxRQUFVaEIsRUFBTWdCLFFBQVdYLEVBQVdZLE1BQU0sU0FBVUMsRUFBR1AsR0FDcEYsT0FBT08sSUFBTWxCLEVBQU1XLEtBRWhCSSxJQUNIbkIsRUFBUVEsVUFBWUQsRUFDcEJnQixjQUFjWixHQUNkWCxFQUFRRyxhQUFhLHVCQUF3QixXQUU1Q1IsTUE5Q042QixDQUFhMUMsR0FvRFosTUFBT3dDLEdBQ1JHLFFBQVFDLE1BQU0sY0FBZ0JKLEVBQVEsbUJBQW9CIiwiZmlsZSI6InNjcmFtYmxlLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBTY3JhbWJsZXIgPSBmdW5jdGlvbiAoc2NyYW1ibGVBcmdzKSB7XHJcblx0dHJ5IHtcclxuXHRcdC8qKiogaGVscGVyIGZ1bmN0aW9ucyAqKiovXHJcblx0XHQvLyB1dGlsaXR5IGZuIHRvIGdldCBhIHJhbmRvbSBjaGFyYWN0ZXIgXHJcblx0XHRjb25zdCByYW5kb21DaGFyID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRyZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCAnJykuc3Vic3RyKDAsIDEpO1xyXG5cdFx0fVxyXG5cdFx0Ly8gb2JqZWN0IHRlc3RcclxuXHRcdGNvbnN0IGlzT2JqZWN0ID0gZnVuY3Rpb24gKGEpIHtcclxuXHRcdFx0cmV0dXJuICghIWEpICYmIChhLmNvbnN0cnVjdG9yID09PSBPYmplY3QpO1xyXG5cdFx0fTtcclxuXHRcdC8vIGRpZCB0aGUgdXNlciBwYXNzIGFuIG9iamVjdCBhcyBhbiBhcmd1bWVudD9cclxuXHRcdGxldCBwYXNzZWRBc09iamVjdCA9IChpc09iamVjdChzY3JhbWJsZUFyZ3MpIHx8IHR5cGVvZiBzY3JhbWJsZUFyZ3MgPT0gJ29iamVjdCcpO1xyXG5cdFx0Ly8gc2V0IGZ1bmN0aW9uIGRlZmF1bHQgYXJndW1lbnRzIGlmIGl0IHdhcyBhbiBvYmplY3RcclxuXHRcdGlmIChwYXNzZWRBc09iamVjdCkge1xyXG5cdFx0XHRzY3JhbWJsZUFyZ3MudGFyZ2V0ID0gKHR5cGVvZiBzY3JhbWJsZUFyZ3MudGFyZ2V0ICE9PSAndW5kZWZpbmVkJyAmJiAocGFzc2VkQXNPYmplY3QpKSA/IHNjcmFtYmxlQXJncy50YXJnZXQgOiAnW2RhdGEtc2NyYW1ibGVyXSc7XHJcblx0XHRcdHNjcmFtYmxlQXJncy5yYW5kb20gPSAodHlwZW9mIHNjcmFtYmxlQXJncy5yYW5kb20gIT09ICd1bmRlZmluZWQnICYmIChwYXNzZWRBc09iamVjdCkpID8gc2NyYW1ibGVBcmdzLnJhbmRvbSA6IFsxMDAwLCAzMDAwXTtcclxuXHRcdFx0c2NyYW1ibGVBcmdzLnNwZWVkID0gKHR5cGVvZiBzY3JhbWJsZUFyZ3Muc3BlZWQgIT09ICd1bmRlZmluZWQnICYmIChwYXNzZWRBc09iamVjdCkpID8gc2NyYW1ibGVBcmdzLnNwZWVkIDogMTAwO1xyXG5cdFx0fVxyXG5cdFx0Ly8gdXRpbGl0eSBmbiB0byBnZXQgYSByYW5kb20gZGVsYXkgdGltZSBcclxuXHRcdGNvbnN0IHJhbmRvbVRpbWUgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdGlmIChwYXNzZWRBc09iamVjdCkge1xyXG5cdFx0XHRcdHJldHVybiBzY3JhbWJsZUFyZ3MucmFuZG9tWzBdICsgKE1hdGgucmFuZG9tKCkgKiAoMSAtIHNjcmFtYmxlQXJncy5yYW5kb21bMV0pICsgc2NyYW1ibGVBcmdzLnJhbmRvbVsxXSk7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIDEwMDAgKyAoTWF0aC5yYW5kb20oKSAqICgxIC0gMzAwMCkgKyAzMDAwKTtcclxuXHRcdH1cclxuXHJcblx0XHRzY3JhbWJsZUZpcmUoc2NyYW1ibGVBcmdzKTsgLy8gY2FsbCBhY3Rpb24gZm5cclxuXHJcblx0XHRmdW5jdGlvbiBzY3JhbWJsZUZpcmUoc2NyYW1ibGVBcmdzKSB7IC8vIHJlbWVtYmVyLCBob2lzdGVkXHJcblx0XHRcdC8vIGdldCBjaG9zZW4gc2NyYW1ibGUgaXRlbXNcclxuXHRcdFx0Y29uc3Qgc2NyYW1ibGUgPSAocGFzc2VkQXNPYmplY3QpID8gWy4uLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2NyYW1ibGVBcmdzLnRhcmdldCldIDogWy4uLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2NyYW1ibGVBcmdzKV07XHJcblxyXG5cdFx0XHQvLyBmb3IgZWFjaCBzY3JhbWJsZSBlbGVtZW50XHJcblx0XHRcdHNjcmFtYmxlLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQsIHdoaWNoKSB7XHJcblxyXG5cdFx0XHRcdGlmIChlbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1zY3JhbWJsZS1hY3RpdmUnKSAhPT0gJ3RydWUnKSB7XHJcblx0XHRcdFx0XHRlbGVtZW50LnNldEF0dHJpYnV0ZSgnZGF0YS1zY3JhbWJsZS1hY3RpdmUnLCAndHJ1ZScpO1xyXG5cclxuXHRcdFx0XHRcdGxldCB0cnV0aCA9IGVsZW1lbnQudGV4dENvbnRlbnQuc3BsaXQoJycpOyAvLyBnZXQgbGV0dGVyc1xyXG5cdFx0XHRcdFx0bGV0IHRydXRoSFRNTCA9IGVsZW1lbnQuaW5uZXJIVE1MOyAvLyBnZXQgaHRtbFxyXG5cdFx0XHRcdFx0bGV0IG5ld0xldHRlcnMgPSBlbGVtZW50LnRleHRDb250ZW50LnNwbGl0KCcnKTtcclxuXHRcdFx0XHRcdGxldCByZXZlcnQgPSBbXTsgLy8gaW5pdCBlbXB0eSBraWxsIHN3aXRjaCBhcnJheVx0XHJcblx0XHRcdFx0XHRsZXQgc3BlZWQgPSAoc2NyYW1ibGVBcmdzLnNwZWVkKSA/IHNjcmFtYmxlQXJncy5zcGVlZCA6IDEwMDtcclxuXHJcblx0XHRcdFx0XHRjb25zdCB0aWNrZXIgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRcdC8vIG1hcCBvdmVyIGxldHRlcnMgYW5kIHJlcGxhY2Ugd2l0aCByYW5kb20gb3IgcmV2ZXJ0IGJhY2sgdG8gdHJ1dGhcclxuXHRcdFx0XHRcdFx0dHJ1dGgubWFwKChsZXR0ZXIsIGkpID0+IHtcclxuXHRcdFx0XHRcdFx0XHQvLyBicmVhayBpZiBhIHNwYWNlXHJcblx0XHRcdFx0XHRcdFx0aWYgKCcgXFx0XFxuXFxyXFx2Jy5pbmRleE9mKGxldHRlcikgPiAtMSkgcmV0dXJuO1xyXG5cdFx0XHRcdFx0XHRcdC8vIHNldCBuZXcgcmFuZG9tIGxldHRlclxyXG5cdFx0XHRcdFx0XHRcdG5ld0xldHRlcnNbaV0gPSByYW5kb21DaGFyKCk7XHJcblx0XHRcdFx0XHRcdFx0Ly8gc2V0IHJhbmRvbSB0aW1lb3V0IHRvIG1ha2UgbGV0dGVycyByZXNldCBhdCBkaWZmZXJlbnQgdGltZXNcclxuXHRcdFx0XHRcdFx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0XHRcdHJldmVydFtpXSA9IHRydWU7XHJcblx0XHRcdFx0XHRcdFx0fSwgcmFuZG9tVGltZSgpKTtcclxuXHRcdFx0XHRcdFx0XHQvLyByZXNldCBpbmRpdmlkdWFsIGxldHRlciBpZiBraWxsIHN3aXRjaFxyXG5cdFx0XHRcdFx0XHRcdGlmIChyZXZlcnRbaV0gPT09IHRydWUpIHtcclxuXHRcdFx0XHRcdFx0XHRcdG5ld0xldHRlcnNbaV0gPSB0cnV0aFtpXTtcclxuXHRcdFx0XHRcdFx0XHR9O1xyXG5cdFx0XHRcdFx0XHRcdC8vIHNldCBodG1sXHJcblx0XHRcdFx0XHRcdFx0ZWxlbWVudC50ZXh0Q29udGVudCA9IG5ld0xldHRlcnMuam9pbignJyk7XHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8ga2lsbCBpbnRlcnZhbCBhZnRlciBhbGwgbGV0dGVyIHJldHVybmVkIHRvIG5vcm1hbCB0byBzYXZlIHN0YWNrXHJcblx0XHRcdFx0XHRcdGxldCBraWxsQ2hlY2sgPSAobmV3TGV0dGVycy5sZW5ndGggPT0gdHJ1dGgubGVuZ3RoKSAmJiBuZXdMZXR0ZXJzLmV2ZXJ5KGZ1bmN0aW9uIChlLCBpKSB7XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGUgPT09IHRydXRoW2ldO1xyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0aWYgKGtpbGxDaGVjaykge1xyXG5cdFx0XHRcdFx0XHRcdGVsZW1lbnQuaW5uZXJIVE1MID0gdHJ1dGhIVE1MO1xyXG5cdFx0XHRcdFx0XHRcdGNsZWFySW50ZXJ2YWwodGlja2VyKTsgLy8gc3RvcCBsb29waW5nXHJcblx0XHRcdFx0XHRcdFx0ZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtc2NyYW1ibGUtYWN0aXZlJywgJ2ZhbHNlJyk7XHJcblx0XHRcdFx0XHRcdH07XHJcblx0XHRcdFx0XHR9LCBzcGVlZCk7IC8vIGVuZCB0aWNrZXJcclxuXHJcblx0XHRcdFx0fSAvLyBlbmQgY2hlY2sgZm9yIGFjdGl2ZVxyXG5cclxuXHRcdFx0fSk7IC8vIGVuZCBmb3JFYWNoXHJcblx0XHR9OyAvLyBlbmQgc2NyYW1ibGVGaXJlXHJcblx0fSBjYXRjaCAoZSkge1xyXG5cdFx0Y29uc29sZS50cmFjZSgnJWN1aC1vaDogJWMnICsgZSArICcnLCAnY29sb3I6aW5kaWFucmVkOycsICdjb2xvcjpjb3JuZmxvd2VyYmx1ZTsnKTtcclxuXHR9XHJcbn07IC8vIGVuZCBTY3JhbWJsZVxyXG4iXX0=
