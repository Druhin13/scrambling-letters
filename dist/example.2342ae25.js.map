{"version":3,"sources":["js/scrambleUtil.js","js/scrambleSetup.js","js/scramble.js","js/example.js"],"names":["randomChar","length","debug","l","d","r","Math","random","toString","replace","substr","indexOf","randomTime","arg","rand","asObj","isArray","isObject","a","constructor","Object","Array","isBool","ScrambleSetup","scrambleFire","scrambleFireArgs","passedAsObject","target","speed","text","scramble","document","querySelectorAll","forEach","element","getAttribute","setAttribute","truth","textContent","split","truthHTML","innerHTML","startText","newLetters","revert","HTMLreset","defineEndText","end","endText","startTextTemp","item","index","push","String","ticker","setInterval","map","letter","i","setTimeout","join","killCheck","every","e","innerContent","children","clearInterval","Scrambler","setup","buttonT","querySelector","buttonP","buttonN","addEventListener"],"mappings":"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","file":"example.2342ae25.js","sourceRoot":"..","sourcesContent":["/* eslint-disable import/prefer-default-export, no-console */\n\n// export helper functions - these are used in the ScrambleSetup wrapper\n\n// utility fn to get a random character\nexport const randomChar = function (length, debug) {\n  const l = length || 1;\n  const d = debug || false;\n  const r = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, l);\n  if (' \\t\\n\\r\\v'.indexOf(r) < 0 && debug !== true) return r;\n  return false;\n};\n\n// utility fn to get a random delay time\nexport const randomTime = function (arg, rand) {\n  const asObj = arg || false;\n  if ( asObj && isArray(rand) && rand.length > 1  ) {\n    return rand[0] + ((Math.random() * (1 - rand[1])) + rand[1]);\n  }\n  return 1000 + ((Math.random() * (1 - 3000)) + 3000);\n};\n\n// object test\nexport const isObject = function (a) {\n  return (!!a) && (a.constructor === Object);\n};\n\n// array test\nexport const isArray = function (a) {\n  return (!!a) && (a.constructor === Array);\n};\n\n// boolean test\nexport const isBool = function (a) {\n  return typeof a === \"boolean\";\n};","/* eslint-disable import/prefer-default-export, no-console */\n\n// get util functions\nimport { randomChar, randomTime, isObject, isArray, isBool } from './scrambleUtil';\n\n// export main setup function - this is imported in the main api export\nexport const ScrambleSetup = (function () { // wrapper function\n\n  const scrambleFire = function (scrambleFireArgs) {\n    // return if array passed (needs string or object)\n    if ( isArray(scrambleFireArgs) || isBool(scrambleFireArgs) ) {\n      return false;\n    }\n\n    // set function default arguments if it was an object\n    const passedAsObject = ( isObject(scrambleFireArgs) || typeof scrambleFireArgs === 'object' );\n    if (passedAsObject) {\n      scrambleFireArgs.target = (typeof scrambleFireArgs.target !== 'undefined' && (passedAsObject)) ? scrambleFireArgs.target : '[data-scrambler]';\n      scrambleFireArgs.random = (typeof scrambleFireArgs.random !== 'undefined' && (passedAsObject)) ? scrambleFireArgs.random : [1000, 3000];\n      scrambleFireArgs.speed = (typeof scrambleFireArgs.speed !== 'undefined' && (passedAsObject)) ? scrambleFireArgs.speed : 100;\n      scrambleFireArgs.text = (typeof scrambleFireArgs.text !== 'undefined' && (passedAsObject)) ? scrambleFireArgs.text : false;\n    }\n\n    // get chosen scramble items\n    const scramble = (passedAsObject) ? [...document.querySelectorAll(scrambleFireArgs.target)] : [...document.querySelectorAll(scrambleFireArgs)];\n\n    // for each scramble element\n    scramble.forEach((element) => {\n      \n      if (element.getAttribute('data-scramble-active') !== 'true') {\n        element.setAttribute('data-scramble-active', 'true');\n\n        let truth = element.textContent.split(''); // get letters\n        const truthHTML = element.innerHTML; // get html\n        let startText = truth;\n        let newLetters = element.textContent.split('');\n        const revert = []; // init empty kill switch array\n        const speed = (scrambleFireArgs.speed) ? scrambleFireArgs.speed : 100;\n        let HTMLreset = false;\n\n        // if user defines an ending text string then use that instead of the original text\n        const defineEndText = function (end) {\n          const endText = end || element.textContent;\n          truth = endText.split('');\n          newLetters = endText.split('');\n          const startTextTemp = [];\n          truth.forEach((item, index) => {\n            if (' \\t\\n\\r\\v'.indexOf(truth[index]) > -1) {\n              startTextTemp.push(' ');\n            } else {\n              startTextTemp.push(randomChar());\n            }\n          });\n          startText = startTextTemp;\n        };\n        // first check passed option and then data-attribute\n        if (scrambleFireArgs.text && scrambleFireArgs.text !== '' && (typeof scrambleFireArgs.text === 'string' || scrambleFireArgs.text instanceof String)) {\n          defineEndText(scrambleFireArgs.text);\n          HTMLreset = true;\n        } else if (element.getAttribute('data-scramble-text') && element.getAttribute('data-scramble-text') !== '') {\n          defineEndText(element.getAttribute('data-scramble-text'));\n          HTMLreset = true;\n        }\n\n        const ticker = setInterval(() => {\n          // map over letters and replace with random or revert back to truth\n          startText.map((letter, i) => {\n            // break if a space\n            if (' \\t\\n\\r\\v'.indexOf(letter) > -1) return false;\n            // set new random letter\n            newLetters[i] = randomChar();\n            // set random timeout to make letters reset at different times\n            setTimeout(() => {\n              revert[i] = true;\n            }, randomTime( isObject(scrambleFireArgs), scrambleFireArgs.random ));\n            // reset individual letter if kill switch\n            if (revert[i] === true) {\n              newLetters[i] = truth[i];\n            }\n            // set html\n            element.textContent = newLetters.join('');\n            return true;\n          });\n\n          // kill interval after all letter returned to normal to save stack\n          const killCheck = (newLetters.length === truth.length) && newLetters.every((e, i) => e === truth[i]);\n          if (killCheck) {\n            element.innerHTML = truthHTML;\n            if (HTMLreset) {\n              const innerContent = element.children[0];\n              if (innerContent && innerContent !== '') {\n                innerContent.textContent = newLetters.join('');\n              } else {\n                element.textContent = newLetters.join('');\n              }\n            }\n            clearInterval(ticker); // stop looping\n            element.setAttribute('data-scramble-active', 'false');\n          }\n        }, speed); // end ticker\n      } // end check for active\n    }); // end forEach\n    return true;\n  }; // end scrambleFire\n\n  // expose function\n  return scrambleFire;\n}()); // end ScramblerSetup","/* eslint-disable import/prefer-default-export, no-console */\n\n// get setup function\nimport { ScrambleSetup } from './scrambleSetup';\n\n// export main api function\nexport const Scrambler = (function (setup) { // wrapper function\n  return setup;\n}(ScrambleSetup));","/* eslint-disable no-console */\n\nimport { Scrambler } from './scramble';\n\nScrambler({\n  target: '[data-title-scrambler]',\n  random: [1000, 5000],\n  speed: 100,\n});\n\nScrambler('p:not(.no-scramble), ul:not(.no-scramble) li');\n\nconst buttonT = document.querySelector('#scramble-title-button');\nconst buttonP = document.querySelector('#scramble-paragraph-button');\nconst buttonN = document.querySelector('#scramble-paragraph-decode');\n\nbuttonT.addEventListener('click', () => {\n  Scrambler({\n    target: '[data-title-scrambler]',\n    random: [1000, 10000]\n  });\n});\n\nbuttonP.addEventListener('click', () => {\n  Scrambler({\n    target: 'p:not(.no-scramble), ul:not(.no-scramble) li, h3:not(.no-scramble)',\n    random: [1000, 30000],\n  });\n});\n\nbuttonN.addEventListener('click', () => {\n  Scrambler({\n    target: '[data-title-scrambler]',\n    random: [1000, 20000],\n    speed: 100,\n    text: 'Secret message',\n  });\n});\n"]}