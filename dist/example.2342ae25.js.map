{"version":3,"sources":["js/scrambleSetup.js","js/scramble.js","js/example.js"],"names":["ScramblerSetup","scrambleArgs","randomChar","length","l","r","Math","random","toString","replace","substr","indexOf","isObject","a","constructor","Object","isArray","Array","isBool","Boolean","randomTime","arg","asObj","scrambleFire","scrambleFireArgs","passedAsObject","target","speed","text","scramble","document","querySelectorAll","forEach","element","getAttribute","setAttribute","truth","textContent","split","truthHTML","innerHTML","startText","newLetters","revert","HTMLreset","defineEndText","end","endText","startTextTemp","item","index","push","String","ticker","setInterval","map","letter","i","setTimeout","join","killCheck","every","e","innerContent","children","clearInterval","Scrambler","setup","buttonT","querySelector","buttonP","buttonN","addEventListener"],"mappings":"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","file":"example.2342ae25.js","sourceRoot":"..","sourcesContent":["/* eslint-disable import/prefer-default-export, no-console */\n\n// export main setup function - this is imported in the main api export\nexport const ScramblerSetup = (function (scrambleArgs) { // wrapper function\n  /** * helper functions ** */\n  // utility fn to get a random character\n  const randomChar = function (length) {\n    const l = length || 1;\n    const r = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, l);\n    if (' \\t\\n\\r\\v'.indexOf(r) < 0) return r;\n    return false;\n  };\n\n  // object test\n  const isObject = function (a) {\n    return (!!a) && (a.constructor === Object);\n  };\n\n  // array test\n  const isArray = function (a) {\n    return (!!a) && (a.constructor === Array);\n  };\n\n  // boolean test\n  const isBool = function (a) {\n    return (!!a) && (a.constructor === Boolean);\n  };\n\n  // utility fn to get a random delay time\n  const randomTime = function (arg) {\n    const asObj = arg || false;\n    if (asObj) {\n      return scrambleArgs.random[0] + ((Math.random() * (1 - scrambleArgs.random[1])) + scrambleArgs.random[1]);\n    }\n    return 1000 + ((Math.random() * (1 - 3000)) + 3000);\n  };\n\n  const scrambleFire = function (scrambleFireArgs) {\n    // return if array passed (needs string or object)\n    if (isArray(scrambleFireArgs) || isBool(scrambleFireArgs)) {\n      return false;\n    }\n\n    // set function default arguments if it was an object\n    const passedAsObject = (isObject(scrambleFireArgs) || typeof scrambleFireArgs === 'object');\n    if (passedAsObject) {\n      scrambleFireArgs.target = (typeof scrambleFireArgs.target !== 'undefined' && (passedAsObject)) ? scrambleFireArgs.target : '[data-scrambler]';\n      scrambleFireArgs.random = (typeof scrambleFireArgs.random !== 'undefined' && (passedAsObject)) ? scrambleFireArgs.random : [1000, 3000];\n      scrambleFireArgs.speed = (typeof scrambleFireArgs.speed !== 'undefined' && (passedAsObject)) ? scrambleFireArgs.speed : 100;\n      scrambleFireArgs.text = (typeof scrambleFireArgs.text !== 'undefined' && (passedAsObject)) ? scrambleFireArgs.text : false;\n    }\n\n    // get chosen scramble items\n    const scramble = (passedAsObject) ? [...document.querySelectorAll(scrambleFireArgs.target)] : [...document.querySelectorAll(scrambleFireArgs)];\n\n    // for each scramble element\n    scramble.forEach((element) => {\n      if (element.getAttribute('data-scramble-active') !== 'true') {\n        element.setAttribute('data-scramble-active', 'true');\n\n        let truth = element.textContent.split(''); // get letters\n        const truthHTML = element.innerHTML; // get html\n        let startText = truth;\n        let newLetters = element.textContent.split('');\n        const revert = []; // init empty kill switch array\n        const speed = (scrambleFireArgs.speed) ? scrambleFireArgs.speed : 100;\n        let HTMLreset = false;\n\n        // if user defines an ending text string then use that instead of the original text\n        const defineEndText = function (end) {\n          const endText = end || element.textContent;\n          truth = endText.split('');\n          newLetters = endText.split('');\n          const startTextTemp = [];\n          truth.forEach((item, index) => {\n            if (' \\t\\n\\r\\v'.indexOf(truth[index]) > -1) {\n              startTextTemp.push(' ');\n            } else {\n              startTextTemp.push(randomChar());\n            }\n          });\n          startText = startTextTemp;\n        };\n        // first check passed option and then data-attribute\n        if (scrambleFireArgs.text && scrambleFireArgs.text !== '' && (typeof scrambleFireArgs.text === 'string' || scrambleFireArgs.text instanceof String)) {\n          defineEndText(scrambleFireArgs.text);\n          HTMLreset = true;\n        } else if (element.getAttribute('data-scramble-text') && element.getAttribute('data-scramble-text') !== '') {\n          defineEndText(element.getAttribute('data-scramble-text'));\n          HTMLreset = true;\n        }\n\n        const ticker = setInterval(() => {\n          // map over letters and replace with random or revert back to truth\n          startText.map((letter, i) => {\n            // break if a space\n            if (' \\t\\n\\r\\v'.indexOf(letter) > -1) return false;\n            // set new random letter\n            newLetters[i] = randomChar();\n            // set random timeout to make letters reset at different times\n            setTimeout(() => {\n              revert[i] = true;\n            }, randomTime());\n            // reset individual letter if kill switch\n            if (revert[i] === true) {\n              newLetters[i] = truth[i];\n            }\n            // set html\n            element.textContent = newLetters.join('');\n            return true;\n          });\n\n          // kill interval after all letter returned to normal to save stack\n          const killCheck = (newLetters.length === truth.length) && newLetters.every((e, i) => e === truth[i]);\n          if (killCheck) {\n            element.innerHTML = truthHTML;\n            if (HTMLreset) {\n              const innerContent = element.children[0];\n              if (innerContent && innerContent !== '') {\n                innerContent.textContent = newLetters.join('');\n              } else {\n                element.textContent = newLetters.join('');\n              }\n            }\n            clearInterval(ticker); // stop looping\n            element.setAttribute('data-scramble-active', 'false');\n          }\n        }, speed); // end ticker\n      } // end check for active\n    }); // end forEach\n    return true;\n  }; // end scrambleFire\n\n  // scrambleFire(scrambleArgs); // trigger function\n\n  // expose functions\n  return {\n    scrambleFire,\n    randomChar,\n    randomTime,\n    isObject,\n  };\n}()); // end ScramblerSetup","/* eslint-disable import/prefer-default-export, no-console */\n\n// get setup function\nimport { ScramblerSetup } from './scrambleSetup';\n\n// export main api function\nexport const Scrambler = (function (setup) { // wrapper function\n  return setup.scrambleFire;\n}(ScramblerSetup)); ","/* eslint-disable no-console */\n\nimport { Scrambler } from './scramble';\n\nScrambler({\n  target: '[data-title-scrambler]',\n  random: [1000, 30000],\n  speed: 100,\n});\n\nScrambler('p:not(.no-scramble), ul:not(.no-scramble) li');\n\nScrambler({\n  target: '#scramble-text-id',\n  random: [1000, 30000],\n  speed: 100,\n});\n\nconst buttonT = document.querySelector('#scramble-title-button');\nconst buttonP = document.querySelector('#scramble-paragraph-button');\nconst buttonN = document.querySelector('#scramble-paragraph-new');\n\nbuttonT.addEventListener('click', () => {\n  Scrambler('[data-title-scrambler]');\n  Scrambler({\n    target: '#scramble-text-id',\n    random: [1000, 30000],\n    speed: 100,\n  });\n});\n\nbuttonP.addEventListener('click', () => {\n  Scrambler('p:not(.no-scramble), ul:not(.no-scramble) li, h3:not(.no-scramble)');\n});\n\nbuttonN.addEventListener('click', () => {\n  Scrambler({\n    target: '[data-title-scrambler]',\n    random: [1000, 30000],\n    speed: 100,\n    text: 'Secret message',\n  });\n});\n"]}